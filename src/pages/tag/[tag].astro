---
import Layout from '../../layouts/Layout.astro';
import { getCollection } from 'astro:content';
import '../../styles/global.css';

export async function getStaticPaths() {
  const posts = await getCollection('blog');
  const tags = [...new Set(posts.flatMap((post) => post.data.tags))];

  return tags.map((tag) => ({
    params: { tag },
    props: {
      posts: posts.filter((post) => post.data.tags.includes(tag)),
    },
  }));
}

const { tag } = Astro.params;
const { posts } = Astro.props;
---

<Layout>
  <main class="container mx-auto px-4 py-12">
    <header class="max-w-4xl mx-auto text-center mb-12">
      <h1 class="text-4xl font-bold text-slate-800 mb-4">
        Posts marcados com #{tag}
      </h1>
      <a
        href="/"
        class="text-indigo-600 hover:text-indigo-800 transition-colors"
      >
        ‚Üê Back to all posts
      </a>
    </header>

    <div class="grid gap-8 md:grid-cols-2 lg:grid-cols-3 max-w-7xl mx-auto">
      {
        posts.map((post) => (
          <article class="bg-white border border-slate-200 rounded-xl p-6 hover:shadow-md transition-all duration-300">
            <a href={`/blog/${post.id}`}>
              <h2 class="text-xl font-semibold text-slate-800 mb-2">
                {post.data.title}
              </h2>
              {post.data.description && (
                <p class="text-slate-600 mb-4">{post.data.description}</p>
              )}
              <div class="flex flex-wrap gap-2">
                {post.data.tags.map((postTag) => (
                  <span
                    class:list={[
                      'px-2 py-1 text-sm rounded-full',
                      tag === postTag
                        ? 'bg-indigo-100 text-indigo-700'
                        : 'bg-slate-100 text-slate-700',
                    ]}
                  >
                    #{postTag}
                  </span>
                ))}
              </div>
            </a>
          </article>
        ))
      }
    </div>
  </main>
</Layout>
